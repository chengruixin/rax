{"version":3,"file":"index.js","sources":["../src/render.ts","../src/index.ts"],"sourcesContent":["type SuperHTMLElement = HTMLElement & {\r\n    _fiber?: Fiber;\r\n}\r\n\r\nexport type Fiber = {\r\n    type: string;\r\n    children?: Fiber[] | string;\r\n    props?: Record<string, any>;\r\n    element?: SuperHTMLElement;\r\n}\r\n\r\nconst domOperations = {\r\n    createElment: (tagName: string) => {\r\n        return document.createElement(tagName)\r\n    },\r\n    setTextContent: (element: SuperHTMLElement, text: string) => {\r\n        element.textContent = text;\r\n    },\r\n    insert: (element: SuperHTMLElement, container: SuperHTMLElement) => {\r\n        container.appendChild(element);\r\n    },\r\n    remove: (element: SuperHTMLElement, container: SuperHTMLElement) => {\r\n        container.removeChild(element);\r\n    }\r\n}\r\n\r\n\r\nconst pathProps = (element: SuperHTMLElement, oldProps: Record<string, any>, newProps: Record<string, any>) => {\r\n    if (!newProps) {\r\n        return \r\n    }\r\n\r\n    for (const key of Object.keys(newProps)) {\r\n        element[key] = newProps[key];\r\n    }\r\n}\r\n\r\nconst mountElement = (fiber: Fiber, container: SuperHTMLElement) => {\r\n    const element = fiber.element = domOperations.createElment(fiber.type);\r\n\r\n    if (typeof fiber.children === 'string') {\r\n        domOperations.setTextContent(element, fiber.children);\r\n    } else {\r\n        for (const child of fiber.children) {\r\n            patch(null, child, element);\r\n        }\r\n    }\r\n\r\n    pathProps(element, null, fiber.props);\r\n\r\n    domOperations.insert(element, container);\r\n}\r\n\r\nconst reconcileChildren = (oldFiber: Fiber, newFiber: Fiber) => {\r\n    if (oldFiber.children) {\r\n        if (typeof oldFiber.children === 'string') {\r\n            domOperations.setTextContent(oldFiber.element, '')\r\n        } else {\r\n            for (const child of oldFiber.children) {\r\n                unmount(child)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (newFiber.children) {\r\n        if (typeof newFiber.children === 'string') {\r\n            domOperations.setTextContent(newFiber.element, newFiber.children)\r\n        } else {\r\n            for (const child of newFiber.children) {\r\n                patch(null, child, newFiber.element)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst pacthElement = (oldFiber: Fiber, newFiber: Fiber, container: SuperHTMLElement) => {\r\n    const element = newFiber.element = oldFiber.element\r\n    pathProps(element, oldFiber.props, newFiber.props)\r\n    reconcileChildren(oldFiber, newFiber)\r\n}\r\n\r\nconst unmount = (fiber: Fiber) => {\r\n    domOperations.remove(fiber.element, fiber.element.parentNode as SuperHTMLElement);\r\n}\r\n\r\nconst patch = (oldFiber: Fiber, newFiber: Fiber, container: SuperHTMLElement) => {\r\n    if (oldFiber && oldFiber.type !== newFiber.type) {\r\n        unmount(oldFiber)\r\n        oldFiber = null\r\n    }\r\n    if (!oldFiber) {\r\n        mountElement(newFiber, container);\r\n    } else {\r\n        pacthElement(oldFiber, newFiber, container)\r\n    }\r\n}\r\nexport function render(fiber: Fiber, container: SuperHTMLElement) {\r\n    const oldFiber = container._fiber;\r\n\r\n    if (fiber) {\r\n        patch(oldFiber, fiber, container);\r\n    } else {\r\n        if (oldFiber) {\r\n            unmount(oldFiber);\r\n        }\r\n    }\r\n\r\n    container._fiber = fiber\r\n}\r\n\r\n// TODO: props 处理\r\n// TODO: 事件冒泡 & 事件处理","import { Fiber, render } from \"./render\";\r\n\r\nexport {\r\n    render\r\n}\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\n\r\n\r\nconst fiberTree: Fiber = {\r\n    type: \"div\",\r\n    props: {\r\n        id: \"box\"\r\n    },\r\n    children: [\r\n        {\r\n            type: \"span\",\r\n            props: {\r\n                id: \"box_span\"\r\n            },\r\n            children: \"hi there\"\r\n        },\r\n        {\r\n            type: \"ul\",\r\n            props: {\r\n                id: \"box_ul\"\r\n            },\r\n            children: [\r\n                {\r\n                    type: \"li\",\r\n                    props: {\r\n                        id: \"box_ul_li_1\"\r\n                    },\r\n                    children: \"i am one list\"\r\n                },\r\n                {\r\n                    type: \"li\",\r\n                    props: {\r\n                        id: \"box_ul_li_2\"\r\n                    },\r\n                    children: \"i am two lists\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            type: \"h1\",\r\n            props: {\r\n                id: \"box_h1\"\r\n            },\r\n            children: \"a header\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst fiberTree2: Fiber = {\r\n    type: \"div\",\r\n    props: {\r\n        id: \"box\"\r\n    },\r\n    children: [\r\n    \r\n        {\r\n            type: \"ul\",\r\n            props: {\r\n                id: \"box_ul\"\r\n            },\r\n            children: [\r\n\r\n                {\r\n                    type: \"li\",\r\n                    props: {\r\n                        id: \"box_ul_li_2\"\r\n                    },\r\n                    children: \"i am two lists\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            type: \"h1\",\r\n            props: {\r\n                id: \"box_h1\"\r\n            },\r\n            children: \"a header\"\r\n        },\r\n        {\r\n            type: \"h2\",\r\n            children: \"a second header\"\r\n        }\r\n    ]\r\n}\r\n\r\nrender(fiberTree, root);\r\n\r\n// setTimeout(() => {\r\n\r\n//     render(null, root);\r\n// }, 3000);\r\n\r\nsetTimeout(() => {\r\n\r\n    render(fiberTree2, root);\r\n}, 1000);\r\n"],"names":["domOperations","createElment","tagName","document","createElement","setTextContent","element","text","textContent","insert","container","appendChild","remove","removeChild","pathProps","oldProps","newProps","_i","_a","Object","keys","length","key","mountElement","fiber","type","children","child","patch","props","reconcileChildren","oldFiber","newFiber","unmount","_b","_c","pacthElement","parentNode","render","_fiber","root","getElementById","fiberTree","id","fiberTree2","setTimeout"],"mappings":"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"}